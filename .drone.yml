---
kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: arm64

concurrency:
  limit: 1

steps:
- name: restore-cache-with-filesystem
  image: meltwater/drone-cache:latest
  pull: true
  settings:
    backend: "filesystem"
    restore: true
    cache_key: "volume"
    # filesystem_cache_root: "/tmp/cache"
    mount:
      - 'linux'
  volumes:
  - name: cache
    path: /var/lib/drone/cache

- name: createimage
  image: docker:latest
  volumes:
  - name: docker_sock
    path: /var/run/docker.sock
  commands:
  - ls -l ./
  - ls -l /var/run/
  - docker build -t debian .
  - chmod -R o+rw ./

- name: linux-update
  image: debian
  pull: if-not-exists
  failure: ignore
  commands:
  - make linux_update

- name: rebuild-cache-with-filesystem
  image: meltwater/drone-cache:latest
  pull: true
  settings:
    backend: "filesystem"
    rebuild: true
    cache_key: "volume"
    # filesystem_cache_root: "/tmp/cache"
    mount:
      - 'linux'
  volumes:
  - name: cache
    path: /var/lib/drone/cache

- name: checkbindings_mainlinequeue
  image: debian
  pull: if-not-exists
  failure: ignore
  commands:
  - make checkbindings_mainlinequeue

- name: checkdtbs_mainlinequeue
  image: debian
  pull: if-not-exists
  failure: ignore
  commands:
  - make checkdtbs_mainlinequeue

- name: checkpatch_mainlinequeue
  image: debian
  pull: if-not-exists
  failure: ignore
  commands:
  - make checkpatch_mainlinequeue

- name: plainbuild_mainlinequeue
  image: debian
  pull: if-not-exists
  commands:
  - make plainbuild_mainlinequeue

- name: mstarbuild_mainlinequeue
  image: debian
  pull: if-not-exists
  commands:
  - make mstarbuild_mainlinequeue

- name: checkpatch_workqueue
  image: debian
  pull: if-not-exists
  failure: ignore
  commands:
  - make checkpatch_workqueue

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock
  - name: cache
    host:
      path: /var/lib/drone/cache

...
